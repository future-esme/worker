version: '1.0'
services:
  minio:
    image: docker.io/bitnami/minio:2022
    ports:
      - '9000:9000'
      - '9001:9001'
    networks:
      - ms-network
    volumes:
      - 'minio_inotificare:/data'
    environment:
      - MINIO_ROOT_USER=access_key
      - MINIO_ROOT_PASSWORD=secret_key
      - MINIO_DEFAULT_BUCKETS=qr-code
  rabbitmq-notify:
    image: rabbitmq:3-management-alpine
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=rmuser
      - RABBITMQ_DEFAULT_PASS=rmpassword_utm
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    ports:
      - '15672:15672'
      - '5672:5672'
    networks:
      - ms-network

  worker-telegram:
    image: '2014003/worker:v0.2'
    environment:
      spring.rabbitmq.host: rabbitmq-notify
      spring.rabbitmq.port: 5672
      spring.rabbitmq.username: rmuser
      spring.rabbitmq.password: rmpassword_utm
      spring.mail.password: ${TOKEN_EMAIL}
      server.port: 8085
      spring.application.name: worker-telegram
      spring.profiles.active: telegram,dev
      application.tokens.telegram: ${TOKEN_TELEGRAM}
      application.tokens.viber: ${TOKEN_VIBER}
    depends_on:
      - rabbitmq-notify
    ports:
      - '8085:8085'
    networks:
      - ms-network
  worker-viber:
    image: '2014003/worker:v0.2'
    environment:
      spring.rabbitmq.host: rabbitmq-notify
      spring.rabbitmq.port: 5672
      spring.rabbitmq.username: rmuser
      spring.rabbitmq.password: rmpassword_utm
      spring.mail.password: ${TOKEN_EMAIL}
      server.port: 8086
      spring.application.name: worker-viber
      spring.profiles.active: viber,dev
      application.tokens.telegram: ${TOKEN_TELEGRAM}
      application.tokens.viber: ${TOKEN_VIBER}
    depends_on:
      - rabbitmq-notify
    ports:
      - '8086:8086'
    networks:
      - ms-network
  worker-email:
    image: '2014003/worker:v0.2'
    environment:
      spring.rabbitmq.host: rabbitmq-notify
      spring.rabbitmq.port: 5672
      spring.rabbitmq.username: rmuser
      spring.rabbitmq.password: rmpassword_utm
      spring.mail.password: ${TOKEN_EMAIL}
      server.port: 8087
      spring.application.name: worker-email
      spring.profiles.active: mail,prod
      application.tokens.telegram: ${TOKEN_TELEGRAM}
      application.tokens.viber: ${TOKEN_VIBER}
    depends_on:
      - rabbitmq-notify
    ports:
      - '8087:8087'
    networks:
      - ms-network
  inotificare:
    image: '2014003/inotificare:v0.1'
    environment:
      spring.rabbitmq.host: rabbitmq-notify
      spring.rabbitmq.port: 5672
      spring.rabbitmq.username: rmuser
      spring.rabbitmq.password: rmpassword_utm
      spring.datasource.url: jdbc:postgresql://host.docker.internal:5432/inotificare
      spring.datasource.username: postgres
      spring.datasource.password: postgres
      application.minio.uri: http://minio:9000
      application.minio.access-key: access_key
      application.minio.secret-key: secret_key
      server.port: 8080
      spring.profiles.active: prod
    depends_on:
      - rabbitmq-notify
      - minio
    ports:
      - '8080:8080'
    networks:
      - ms-network

volumes:
  minio_inotificare:

networks:
  ms-network:
    driver: bridge
